#!/bin/bash

# {{{ Header -- /gxbase/extras/.bash_helpers (origin)  ~/.bash_helpers (install for use location)
# {{{ Modelines 
# vim:ft=sh:smd:sm:shm=nflix:ts=3:sw=3:tw=120:noai:nowrap:tags=/etc/bash_ext_tags:ve=insert:fdo=jump,hor,search:fcl=all
# vim:fdm=marker:fen:cc=100:fml=0:tw=9999:fdc=4
# }}}
# {{{ SPECIAL NOTES
#[description=Bash Helpers & Config]
# 1. To use tags, make sure you compile the tags file with the makebashtags command from this script
# 2. If you change your tags location, make sure you update the modeline (line 8) with the location
#    which is by default, /etc/bash_ext_tags, for simplicity (though you may not have access to that
# 	  if you aren't a admin.
# 3. This document is best viewed with the following editors:
#		*1: vim (most in-doc features wont work without using vim)
#      2: komodo
#      3: kate         4: gedit     5: text editors that support vi emulation
#    * unless you use vim, this file will be much harder to keep track of since the fold system
#      is already programmatically set up for you, along with the vim options you'll need. Other
#      editors do not support such inline things and will require work on your part. I reccomend
#      you use vim with the YCM, Syntastic, xxx-support (perl-support, bash-support, etc) and the
#      Unite plugin, all under the control of the Vundle plugin (or vam, if you'd rather).
#      I DO NOT SUGGEST: lh- plugins <- especially lh-brackets, it seems to mess up everything
#                        however, the xxx-support plugins dulicate the lh- plugins functioning
#                        (better) anyway. For viewing the result of using ANSI codes, you may
#                        want the AnsiEsc plugin as well. And make sure you enable the Manpage 
#                        support too!
# 4) if you downloaded this, it should have come from: http://gitorious.org/+Paradisim
#    or http://github.com/osirisgothra. It is packaged with the 'gxbase' collection. Check
#    there or use the git://github.com/osirisgothra/gxbase repository to get the latest one.
# 5) USE AT OWN RISK, you are not a little child, you should know what I mean by that. 
#    (not intended for children, if you are wondering)
# }}}
# }}}
#{{{ IMPORTANT: ABOUT THIS FILE
# INSTALL
# -------
#   This file's located in /gxbase/extras/.bash_helpers by default, you can link it to "~/.bash_helpers" to use it.  If the installer
# was provided with this version of gxbase, it will take care of it for you (/gxbase/install.sh). Early versions of gxbase have a dummy
# installer however so be careful that the installer works. Also, the base path /gxbase refers to where you unpacked gxbase at.
#
# EDITING
# -------
#   This file is edited via the 'ef' (edit function), af, df (add function, delete function), and mf (move function) commands, so...
# !!! DO NOT EDIT IT DIRECTLY UNLESS YOU FOLLOW THE SAME EXACT FORMATTING !!!
# 
# FORMAT
# ------
#   Formatting: all functions must be folded (unfold in vim to see it) and formatted in a special way, this way is shown in the fold
# just below this line, don't forget that the first # comment mark is part of this comment and only to use the ones provided to the
# left hand side (remove the ones that come first in the column, doh!). This is how it looks:
# 
# ###{{{F [function_name]
# function function_name()
# {
#    ... body ...
# }
# ###F}}}
# 
# SETTING A CUSTOM EDITOR
# -----------------------
#   If you use [x]f functions, you dont have to worry about this formatting. Note that the function body is only included in the editor, not the 
# function() { line or the ending }. All functions are checked for syntax errors upon exiting the editor. If you do not want to use 'dialog'
# to edit functions (which is the fastest), you can set your custom editor, for example: vim, with this setting:
#
# CUSTOM_FUNCTION_EDITOR=vim
#
#   Note that if you want the vim editor without the provided smartlauncher(tm), then use =/usr/bin/vim or ='command vim', if you are not sure
# where your favorite editor is stored at, but is in the system's path, use CUSTOM_FUNCTION_EDITOR=`which [my_editor_name]` and it will be seeked out.
# If you are in a hurry, i reccomend you use the default, dialog (you can't set it though, it must be UNDEFINED to work!! dialog requires special handling
# so you musn't put it in as a custom editor, that won't work! (does not redirect properly w/o manipulation).
# 
# SEE ALSO
# --------
# * See the header for a list of other choices for custom editors that may work well for you.
#
#}}}
function __fef() { echo "fef: $*"; }
function __makefef() { eval 'function '$1'() { __fef '$1' "$@"; }'; } ; for f in mf rf df sf cf ef af lf; do __makefef $f; done 


