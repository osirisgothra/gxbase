#!/bin/bash

if [[ $1 == "--start" ]]; then
	pushd .
	cd /gxbase/dev
	clear
	while(true); do 
		echo "cycle start."
		echo "Server running (press CTRL+BREAK,X to stop the server)"
		echo "Listening for requests on pipe://$PWDs/manserv..."
		unset reply
		reply=$(cat manserv)
		echo "request: $reply"
		if [[ $reply == stop_man_server_now ]]; then
			echo "server stop requested, sending ack.."
			echo "ok" > /gxbase/dev/manserv
			echo "breaking server cycle..."
			break
		fi
		if [[ $reply ]]; then
			echo "processing request..."
			echo "starting man..."
			man $reply &
			MANPID=$(jobs -p)
#		echo "recording process man(PID=$MANPID)..."
		echo "$MANPID" > /gxbase/dev/manpid
#		echo "switching to process $MANPID..."
			%
			echo "process completed, removing pidfile ($MANPID)..."
			rm /gxbase/dev/manpid -f
			echo "cycle completed, giving oppertunity to exit..."
		fi
		TMOUT=1
		echo "  [Press X within 2 seconds to terminate server]  "
		read -sn1 R
		TMOUT=0
		if [[ $R == q ]]; then
			echo "Terminating server..."
			break
		fi
	done
	echo -ne "Restoring current directory (from $PWD)..."
	popd > /dev/null 2>&1
	echo "Done ($PWD)"
	echo "Server Stopped OK ($?)"
else
	echo "sending request..."
	if [[ -r /gxbase/dev/manpid ]]; then
		echo "aborting current session..."
		kill -s SIGKILL -p $(cat /gxbase/dev/manpid)
		if [[ $? -ne 0 ]]; then
			echo "WARNING: kill failed, you might have to exit the man process manually to get the server to respond!"
			echo "         (do you own the server pid?  do you have permissions to manserv?)"
		else
			echo "killed ok, continuing..."
		fi
	else
		echo "session checker - no session running, no need to terminate any processes, skipping..."
	fi
	if [[ $1 != --stopserver ]]; then
		echo "sending request..."
 		 echo "$1" > /gxbase/dev/manserv
 		 if [[ $? -eq 0 ]]; then
			sleep 0.5
			if [[ -r /gxbase/dev/manpid ]]; then
				echo "success, showing page on pid $(cat /gxbase/dev/manpid)."
			else
				echo "error, did not find a pidfile (probably bad manpage or failed server)"
			fi
		else
			echo "failed to send request, check permissions"
		fi
	else
		echo "stopping server..."
		echo "stop_man_server_now" > /gxbase/dev/manserv
		if [[ $(cat /gxbase/dev/manserv) == ok ]]; then
			echo "terminated okay"
		else
			echo "error: server hung or not running properly, check permissions, etc"
		fi
		echo "done"
	fi
fi
setterm -i
stty sane
