#!/bin/bash
#
# rdlg
#
# calls 'dialog' but reroutes the i/o so it can be easily put in a variable
#
# GXBASE 
#
# (C)2014 Gabriel Sharp, All Rights Reserved
#

# src guard
case $- in *i*) 
	# but complain first
	if (tty -s) || (xset s); then
		# not picky here because --msgbox is 100% zenity gdialog compatible
		gdialog --msgbox "Please DO NOT SOURCE rdlg, execute it as a command either directly or via path."
#		but only if we can
	fi
	$BASH_SOURCE "$@"; 
	return $?;; esac

# tty check
if (tty -s); then
  # note the quotes around @, very important esp for complex calls
	dialog "$@" 2>&1 1>$(tty)
	# give dialog's code back
	exit $?
else
	if [[ $DISPLAY ]] && (xset s); then
		# trick to see if we are in real X session
		# dont bother wasting xsets time unless DISPLAY is there
		# note: gnu gdialog is not 100% compatible with dialog, use the gdialog from gxbase
		gdialog "$@" 2>&1
		# no point in redirecting 1 to a tty when no tty available :)
		# but remember 1 is redirected from caller most likely (unless they want nothing out of this program)
		# so its ok to redirect 2> to "1"
		exit $?
		# give gdialog's code (note stock gdialog is dialog in zenity's clothes in most cases!)
	else
		# wouldnt work anyway, no tty was connected, just give a bad response
		# and no output at all to 1, so captures nothing and variable remains empty for error testing reasons
		exit 1
	fi
	exit 252
	# special code given (only if called during size changes)
fi
exit 253
# same as above	
