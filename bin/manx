#!/bin/bash
#
# manx - apropos-independant manual page viewer for text or GUI environments
# 
# Author:
#      gabriel sharp <osirisgothra@hotmail.com>
#
# Copyright (c) 2011-13 Gabriel Thomas Sharp
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

# NOTE: The following dependencies are 
# required for this tool: 
#        man2html         whereis        tty
#        groff            troff          firefox*
#        links2*          lynx*          resize
#        man**
#
# *   not required, but needed for best operation
# **  used when none of the unrequired tools are installed, as a fallback
#     this program attempts to avoid using apropos but may do so indirectly
#     I have yet to trace this to be true, but the speedups are pretty self
#     explanitory. L:)

# ---- keep two whitespaces before first instruction ------ for readability ----


unset manx_pretests outdev
unset old1 FILENAME
unset errmsg response
unset selection REPLY
unset selnum count firstloop contloop x i
unset BROWSER
unset BROWSER_OPTS

while [ ! -z "$1" ] && [ -z "$manx_pretests" ]; do
	case "$1" in
		debug) 		manx_debugging=yes;;
		ndebug) 	manx_debugging=;;
		verbose) 	manx_verbose=yes;;
		nverbose) manx_verbose=;;
		*) 				manx_pretests=yes;;
	esac
done

[ "$manx_debugging" ] && echo "manx: debugging is on, dry running only"
[ "$manx_verbose" ] && echo "manx: verbose mode is on, extra info will be displayed if a terminal is available"

#variables CUSTOM_BROWSER must be set, don't unset it or you will get bad things happening!
#TODO: set CUSTOM_BROWSER in manlink using PPID as a way to autodetect it, needs to be done (but havent yet)
old1=$1
[ -z "$CUSTOM_BROWSER" ] && CUSTOM_BROWSER=dummy
BROWSER=
BROWSER_OPTS=
# you can set default value for BROWSER_OPTS but you may rather set it below
errmsg="Sorry, Can't find that manpage (requested page: $old1)"

# attempt to detect running browser and use it, this speeds up manx execution time
# also, 50 out of 100 times, manx is running because manlink called it, which means
# user typed a "man://" type of a url, meaning they want the page in THEIR browser!
# feel free to add to this list, or change it.

if (pgrep firefox); then
	BROWSER=firefox
elif (pgrep konqueror); then
	BROWSER=konqueror
elif (pgrep rekonq); then
	BROWSER=rekonq
elif (pgrep chromium-browser); then
	BROWSER=chromium-browser
elif (pgrep google-chrome); then
	BROWSER=google-chrome
elif (pgrep safari); then
	BROWSER=safari
elif (pgrep links2); then
	BROWSER=links2
	BROWSER_OPTS=-g
elif (pgrep lynx); then
	BROWSER=lynx
elif (pgrep iexplore.ex); then
	BROWSER=wine
	BROWSER_OPTS=iexplore.exe
elif (pgrep midori); then
	BROWSER=midori
elif (pgrep komodo); then
	BROWSER=komodo
elif (pgrep $CUSTOM_BROWSER); then
	BROWSER=$CUSTOM_BROWSER
else
	BROWSER=firefox
	BROWSER_OPTS="-new-window -new-instance"
fi


#BROWSER_OPTS="-new-tab" #uncomment this line to open new tab when using manx (or change to -new-window, se)

#sets COLUMNS/ROWS 
eval `resize`

#sets $1 $2, etc
set `whereis -m $1`
shift

if [ "$2" ]; then
	if (tty --silent); then
		# ----------------------- tty menu selection ----------------------
		echo "Multiple Entries Exist, Please Pick One"
		declare -a selection
		declare -i selnum=0
		
		for i in $*; do
			selnum+=1
			selection[$selnum]="$i"
			echo "$selnum - $i"		
		done
		
		contloop=
		firstloop=yes
		
		while [ -z $contloop ]; do
			if [ $firstloop ]; then
				echo -n "Enter a selection (1-$selnum):"
				firstloop=
			fi
			read -sn1
			response=${selection[$REPLY]}
			if [ ! -z "$response" ]; then
				echo -e "\e[0;32m$response\e[0m\n"
				contloop=no
			fi
		done
		# until contloop != <empty>
		
		# v-- set new positional (makes $1 == $response)
		set $response
		echo "new selection: $response"
	else
		#----------------------- zenity menu selection ---------------------------------
		zenity --info --text="TODO: zenity check list"		
		##TODO: do the zenity thing!
	fi
fi
origin="$1"

if [ -z "$1" ]; then
	(tty --silent) && echo "$errmsg" || zenity --info --text "$errmsg"
else
	# found manpage  
	FILENAME="/var/tmp/.man2html${RANDOM}${RANDOM}.tmp.html"
	man2html "$1" > $FILENAME
	
	if [ "$manx_verbose" ]; then
		if (tty --silent); then
			outdev=`tty`
		else
			outdev=/var/tmp/manxmsg.txt
		fi
		echo "pre-run status (unset \$manx_verbose to disable this)"  > $outdev
		for ((x=0;x<$COLUMNS;x++)); do printf "#" >> $outdev; done
		echo "outfile: $FILENAME" >> $outdev
		echo "log: $FILENAME.log" >> $outdev
		echo "DISPLAY: $DISPLAY" >> $outdev
		echo "textbrowser: `readlink /etc/alternatives/www-browser`" >> $outdev
		(set `whereis -b firefox`; echo $2) >> $outdev
		for ((x=0;x<$COLUMNS;x++)); do printf "#" >> $outdev ; done
		if !(tty --silent); then
			zenity --text-info --title=$(basename $BASH_SOURCE) --filename="$outdev"
		fi
	fi
	if [ $DISPLAY ]; then
		if [ $manx_debugging ]; then
			echo 'firefox -new-window '"$FILENAME"' > /dev/null 2> '"$FILENAME"'.log &'
		else
			$BROWSER $BROWSER_OPTS $FILENAME > /dev/null 2> $FILENAME.log &
			disown %
		fi
	else
		if [ $manx_debugging ]; then
			echo '/etc/alternatives/www-browser '"$FILENAME"
		else
			if [ -x /usr/bin/links2 ]; then
				links2 -g "$FILENAME"
			elif [ -x	"/etc/alternatives/www-browser" ]; then
			  /etc/alternatives/www-browser "$FILENAME"
			else
				# no other way to view, just use the old man
				echo "warning: no other tool available, falling back to man..."
				sleep 2.4
				man -l "$origin"
			fi

		fi
	fi

fi


# keep at least two whitespaces at end -------------------- for readability ----
