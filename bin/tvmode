#!/bin/bash
#
#bin/tvmode
#   
#   set tv or secondary display on, off, or complement (cycle on-off depending on current status)
#
# NOTE: this script attempts to detect your display names but do have fallback values, see below
#       for the variables that decribe the fallback values. Also, a certain value is used to determine
#       left/right orientation since the program can't guess this, check these to see that they match
#				your physical setup/room layout.
# 
# Author:
#    Gabriel Thomas Sharp <osirisgothra@hotmail.com>  
# 
# Copyright (C)2013 Paradisim Enterprises, LLC 
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This file was created 
# For more support, visit our homepage: http://paradisim.tk
# Report any bugs to <bugs@paradisim.tk> or visit our FAQ on our website.
#



























function gxbase.video.secondary()
{	
	PRIMARY="DVI-0"
	PRIMARY_LOCATION="left-of"
  TV_DISPLAY="S-video"
	TV_LOCATION="right-of"
  unset displays
	unset d
	declare -i d=0
	declare -a displays
	for i in $(xrandr | grep -P '(?<= )connected' | grep "^[^ ]*" -o); do 
		displays[$d]=$i
		d+=1
	done
	declare -i DISPLAY_COUNT=${#displays[@]}

	if [[ $DISPLAY_COUNT -ge 2 ]]; then
		PRIMARY=${displays[0]}
		TV_DISPLAY=${displays[1]}
	fi

	if [[ "$TV_DISPLAY" == "S-video" ]]; then
		TV_LOCATION="right-of"
	else
		TV_LOCATION="left-of"
	fi

	if [[ "$TV_LOCATION" == "left-of" ]]; then
		PRIMARY_LOCATION="right-of"
	else
		PRIMARY_LOCATION="left-of"
	fi

case $1 in
	off)
		echo "TV Mode: OFF"
		xrandr --output $TV_DISPLAY --off
		xrandr --output $PRIMARY --mode 1280x1024
		;;
  # on		
	*)
		if [[ $1 != on ]]; then
			echo "on/off not specified, defaulting to: on"
		fi
		declare -i errcnt=0; function errcnt++ { errcnt+=1; }
		(! xrandr --output $TV_DISPLAY --mode 640x480 2> .errlist ) && errcnt++
		(! xrandr --output $TV_DISPLAY --${TV_LOCATION} $PRIMARY 2>> .errlist ) && errcnt++
		(! xrandr --output $PRIMARY --mode 1280x1024 2>> .errlist ) && errcnt++
		(! xrandr --output $PRIMARY --${PRIMARY_LOCATION} $TV_DISPLAY 2>> .errlist ) && errcnt++
		if [[ errcnt -gt 0 ]]; then			
			echo "The secondary, $TV_DISPLAY mode is not completely changed, there were $errcnt error(s) during modeswitch."
			echo "errors returned by xrandr:"
			cat .errlist
			rm -f .errlist
		else
			echo "The secondary, $TV_DISPLAY mode is ${1,,} $TV_LOCATION $PRIMARY (which is $PRIMARY_LOCATION secondary display)"
		fi
		;;
esac

}


if [[ -z $1 ]]; then
	if [[ -r $HOME/.config/TVMODE_CYCLE ]]; then
		set -- on
		rm $HOME/.config/TVMODE_CYCLE
	else
		set -- off
		touch $HOME/.config/TVMODE_CYCLE
	fi
fi

gxbase.video.secondary $1


